stages:
  - dependences
  - build
  - publish

#Recuerden que el tag de versionado solo va en front
#Despliegue a dev

dependences_dev:
  stage: dependences
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
  tags:
    - dev
  cache:
    key:
      files:
        - package.json
    paths:
      - node_modules
  script:
    - npm install

build_dev:
  stage: build
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
  tags:
    - dev
  cache:
    - key:
        files:
          - package.json
      paths:
        - node_modules
    - key: cache-$CI_COMMIT_REF_SLUG
      paths:
        - dist
  script:
    - npx tsc
    - cp -f .env dist/

publish_dev:
  variables:
    DEPLOY: "/var/www/api-dev"
    FOLDER: "base"
  stage: publish
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
  tags:
    - dev
  cache:
    - key:
        files:
          - package.json
      paths:
        - node_modules
    - key: cache-$CI_COMMIT_REF_SLUG
      paths:
        - dist
  script:
    - echo "Desplegando a dev"
    - mkdir -p $DEPLOY/$FOLDER/
    - rm -rf $DEPLOY/$FOLDER/*
    - cp -rf $CI_PROJECT_DIR/node_modules/ $DEPLOY/$FOLDER/
    - cp -r $CI_PROJECT_DIR/dist/. $DEPLOY/$FOLDER/
    - mkdir -p $DEPLOY/$FOLDER/tmp/
    - touch $DEPLOY/$FOLDER/tmp/restart.txt

#Despliegue a uat
dependences_uat:
  stage: dependences
  rules:
    - if: $CI_COMMIT_BRANCH == "uat"
  tags:
    - uat
  cache:
    key:
      files:
        - package.json
    paths:
      - node_modules
  script:
    - npm install

build_uat:
  stage: build
  rules:
    - if: $CI_COMMIT_BRANCH == "uat"
  tags:
    - uat
  cache:
    - key:
        files:
          - package.json
      paths:
        - node_modules
    - key: cache-$CI_COMMIT_REF_SLUG
      paths:
        - dist
  script:
    - npx tsc
    - cp -f .env dist/

publish_uat:
  variables:
    DEPLOY: "/var/www/api-uat"
    FOLDER: "base"
  stage: publish
  rules:
    - if: $CI_COMMIT_BRANCH == "uat"
  tags:
    - uat
  cache:
    - key:
        files:
          - package.json
      paths:
        - node_modules
    - key: cache-$CI_COMMIT_REF_SLUG
      paths:
        - dist
  script:
    - echo "Desplegando a uat"
    - mkdir -p $DEPLOY/$FOLDER/
    - rm -rf $DEPLOY/$FOLDER/*
    - cp -rf $CI_PROJECT_DIR/node_modules/ $DEPLOY/$FOLDER/
    - cp -r $CI_PROJECT_DIR/dist/. $DEPLOY/$FOLDER/
    - mkdir -p $DEPLOY/$FOLDER/tmp/
    - touch $DEPLOY/$FOLDER/tmp/restart.txt

#Despliegue de base a produccion
dependences_prod:
  stage: dependences
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  tags:
    - prod-apps
  cache:
    key:
      files:
        - package.json
    paths:
      - node_modules
  script:
    - npm install

build_prod:
  stage: build
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  tags:
    - prod-apps
  cache:
    - key:
        files:
          - package.json
      paths:
        - node_modules
    - key: cache-$CI_COMMIT_REF_SLUG
      paths:
        - dist
  script:
    - npx tsc
    - cp -f .env dist/

publish_prod:
  variables:
    DEPLOY: "/var/www/api"
    FOLDER: "base"
  stage: publish
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  tags:
    - prod-apps
  cache:
    - key:
        files:
          - package.json
      paths:
        - node_modules
    - key: cache-$CI_COMMIT_REF_SLUG
      paths:
        - dist
  script:
    - echo "Desplegando a prod"
    - mkdir -p $DEPLOY/$FOLDER/
    - rm -rf $DEPLOY/$FOLDER/*
    - cp -rf $CI_PROJECT_DIR/node_modules/ $DEPLOY/$FOLDER/
    - cp -rf $CI_PROJECT_DIR/dist/. $DEPLOY/$FOLDER/
    - mkdir -p $DEPLOY/$FOLDER/tmp/
    - touch $DEPLOY/$FOLDER/tmp/restart.txt

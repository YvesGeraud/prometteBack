import { z } from "zod";
import {
  esquemaTextoRequerido,
  esquemaTextoOpcional,
  esquemaEstadoRequerido,
  esquemaEstadoOpcional,
  esquemaUsuarioCreacion,
  esquemaUsuarioActualizacion,
  esquemaFechaOpcional,
  esquemaQueryId,
  esquemaQueryTexto,
  esquemaQueryBoolean,
  esquemaPaginaQuery,
  esquemaLimiteQuery,
  esquemaParamId,
  esquemaDeleteConUsuario,
  esquemaNumeroRequerido,
  esquemaQueryNumeroRequerido,
  paginationSchema,
  idParamSchema,
  esquemaQueryNumeroOpcional,
  esquemaNumeroOpcional,
} from "./commonSchemas";

//TODO ===== SCHEMAS PARA CT_MODULO =====

//? Esquema para crear una nueva modulo
export const crearCtModuloSchema = z.object({
  nombre_modulo: esquemaTextoRequerido(2, 100),
  estado: esquemaEstadoRequerido,
  //id_ct_usuario_in: esquemaUsuarioCreacion,
});

//? Esquema para actualizar una modulo
export const actualizarCtModuloSchema = z.object({
  nombre_modulo: esquemaTextoOpcional(100),
  estado: esquemaEstadoOpcional,
  /*id_ct_usuario_up: esquemaUsuarioCreacion, // Requerido para actualizaci√≥n
  fecha_in: esquemaFechaOpcional,*/
});

//? Schema para filtros y paginaci√≥n de modulos
//! NOTA: Implementa soft delete - por defecto solo muestra registros activos
export const ctModuloFiltrosSchema = z.object({
  //? Filtros espec√≠ficos
  id_modulo: esquemaQueryId,
  nombre_modulo: esquemaQueryTexto,
  estado: esquemaQueryBoolean,
  /*id_ct_usuario_in: esquemaQueryId,
  fecha_in: esquemaFechaOpcional,*/

  //? Filtros para incluir inactivos de modulos
  incluirInactivos: esquemaQueryBoolean,

  //? Paginaci√≥n
  pagina: esquemaPaginaQuery,
  limite: esquemaLimiteQuery,
});

export type CrearCtModuloInput = z.infer<typeof crearCtModuloSchema>;
export type ActualizarCtModuloInput = z.infer<typeof actualizarCtModuloSchema>;

export type BuscarCtModuloInput = z.infer<typeof ctModuloFiltrosSchema>;

//? Esquema para par√°metros de URL (ID de modulo)
export const ctModuloIdParamSchema = z.object({
  id_modulo: esquemaParamId,
});

//? Esquema para validar el body del DELETE - qui√©n ejecuta la eliminaci√≥n
export const eliminarCtModuloSchema = esquemaDeleteConUsuario;

export type CtModuloIdParam = z.infer<typeof ctModuloIdParamSchema>;

export type EliminarCtModuloInput = z.infer<typeof eliminarCtModuloSchema>;

/*
üéâ SCHEMA REFACTORIZADO CON ESQUEMAS BASE REUTILIZABLES

‚úÖ Beneficios:
- ‚ú® C√≥digo m√°s limpio y mantenible
- üîÑ Reutilizaci√≥n de validaciones comunes
- üìù Consistencia en mensajes de error
- üöÄ F√°cil actualizaci√≥n de validaciones globales
- üõ°Ô∏è Menos duplicaci√≥n de c√≥digo

üîß Esquemas utilizados:
- esquemaTextoRequerido/Opcional - Para campos de texto
- esquemaEstadoRequerido/Opcional - Para campos booleanos de estado
- esquemaUsuarioCreacion/Actualizaci√≥n - Para auditor√≠a de usuarios
- esquemaQueryId/Texto/Boolean - Para filtros en query parameters
- esquemaPaginaQuery/LimiteQuery - Para paginaci√≥n
- esquemaParamId - Para par√°metros de URL
- esquemaDeleteConUsuario - Para eliminaci√≥n con auditor√≠a
*/
